!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Bucket	mmg2d.h	/^} Bucket;$/;"	t	typeref:struct:__anon1
Cell	mmg2d.c	/^struct Cell {$/;"	s	file:
END	mmg2d.c	39;"	d	file:
END	mmg2d.c	41;"	d	file:
EPST	locate_2d.c	33;"	d	file:
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_CHK_MESHDATA,mmg2d_chk_meshdata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_FREE_ALLSOLS,mmg2d_free_allsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GETBYIDX_VERTEX,mmg2d_getbyidx_vertex,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_EDGE,mmg2d_get_edge,(MMG5_pMesh *mesh, int* e0, int* e1, int* ref$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_EDGES,mmg2d_get_edges,(MMG5_pMesh *mesh, int* edges,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_ITHSOLS_INSOLSATVERTICES,mmg2d_get_ithsols_insolsatvertices,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_ITHSOL_INSOLSATVERTICES,mmg2d_get_ithsol_insolsatvertices,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_MESHSIZE,mmg2d_get_meshsize,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_QUADRILATERAL,mmg2d_get_quadrilateral,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_QUADRILATERALS,mmg2d_get_quadrilaterals,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_SCALARSOL,mmg2d_get_scalarsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_SCALARSOLS,mmg2d_get_scalarsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_SOLSATVERTICESSIZE,mmg2d_get_solsatverticessize,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_SOLSIZE,mmg2d_get_solsize,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_TENSORSOL,mmg2d_get_tensorsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_TENSORSOLS,mmg2d_get_tensorsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_TRIANGLE,mmg2d_get_triangle,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_TRIANGLEQUALITY,mmg2d_get_trianglequality,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_TRIANGLES,mmg2d_get_triangles,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_VECTORSOL,mmg2d_get_vectorsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_VECTORSOLS,mmg2d_get_vectorsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_VERTEX,mmg2d_get_vertex,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_GET_VERTICES,mmg2d_get_vertices,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_INIT_FILENAMES, mmg2d_init_filenames,(MMG5_pMesh *mesh, MMG5_pSol *sol),$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_INIT_PARAMETERS, mmg2d_init_parameters,(MMG5_pMesh *mesh),$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADALLSOLS,mmg2d_loadallsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADMESH,mmg2d_loadmesh,(MMG5_pMesh *mesh,char* meshin,int* strlen0,int* retval),(mesh, meshin,strlen0,retval)){$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADMSHMESH,mmg2d_loadmshmesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADMSHMESH_AND_ALLDATA,mmg2d_loadmshmesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADSOL,mmg2d_loadsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADVTKMESH,mmg2d_loadvtkmesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADVTKMESH_AND_ALLDATA,mmg2d_loadvtkmesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADVTPMESH,mmg2d_loadvtpmesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADVTPMESH_AND_ALLDATA,mmg2d_loadvtpmesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADVTUMESH,mmg2d_loadvtumesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_LOADVTUMESH_AND_ALLDATA,mmg2d_loadvtumesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEALLSOLS,mmg2d_saveallsols,(MMG5_pMesh *mesh,MMG5_pSol *sol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEMESH,mmg2d_savemesh,(MMG5_pMesh *mesh,char *meshin,int *strlen0, int* retval),$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEMSHMESH,mmg2d_savemshmesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEMSHMESH_AND_ALLDATA,mmg2d_savemshmesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVESOL,mmg2d_savesol,(MMG5_pMesh *mesh,MMG5_pSol *met,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVETETGENMESH,mmg2d_savetetgenmesh,(MMG5_pMesh *mesh,char *meshin,int *strlen0, int* retval),$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEVTKMESH,mmg2d_savevtkmesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEVTKMESH_AND_ALLDATA,mmg2d_savevtkmesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEVTPMESH,mmg2d_savevtpmesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEVTPMESH_AND_ALLDATA,mmg2d_savevtpmesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEVTUMESH,mmg2d_savevtumesh,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SAVEVTUMESH_AND_ALLDATA,mmg2d_savevtumesh_and_alldata,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_CORNER,mmg2d_set_corner,(MMG5_pMesh *mesh, int *k, int* retval),$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_DPARAMETER,mmg2d_set_dparameter,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_EDGE,mmg2d_set_edge,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_EDGES,mmg2d_set_edges,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_INPUTMESHNAME, mmg2d_set_inputmeshname,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_INPUTSOLNAME, mmg2d_set_inputsolname,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_IPARAMETER,mmg2d_set_iparameter,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_ITHSOLS_INSOLSATVERTICES,mmg2d_set_ithsols_insolsatvertices,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_ITHSOL_INSOLSATVERTICES,mmg2d_set_ithsol_insolsatvertices,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_LOCALPARAMETER,mmg2d_set_localparameter,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_MESHSIZE,mmg2d_set_meshsize,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_MULTIMAT,mmg2d_set_multimat,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_OUTPUTMESHNAME,mmg2d_set_outputmeshname,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_OUTPUTSOLNAME,mmg2d_set_outputsolname,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_PARALLELEDGE,mmg2d_set_paralleledge,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_QUADRILATERAL,mmg2d_set_quadrilateral,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_QUADRILATERALS,mmg2d_set_quadrilaterals,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_REQUIREDEDGE,mmg2d_set_requirededge,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_REQUIREDTRIANGLE,mmg2d_set_requiredtriangle,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_REQUIREDVERTEX,mmg2d_set_requiredvertex,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_SCALARSOL,mmg2d_set_scalarsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_SCALARSOLS,mmg2d_set_scalarsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_SOLSATVERTICESSIZE,mmg2d_set_solsatverticessize,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_SOLSIZE,mmg2d_set_solsize,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_TENSORSOL,mmg2d_set_tensorsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_TENSORSOLS,mmg2d_set_tensorsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_TRIANGLE,mmg2d_set_triangle,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_TRIANGLES,mmg2d_set_triangles,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_VECTORSOL,mmg2d_set_vectorsol,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_VECTORSOLS,mmg2d_set_vectorsols,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_VERTEX,mmg2d_set_vertex,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_SET_VERTICES,mmg2d_set_vertices,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_UNSET_CORNER,mmg2d_unset_corner,(MMG5_pMesh *mesh, int *k, int* retval),$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_UNSET_REQUIREDEDGE,mmg2d_unset_requirededge,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_UNSET_REQUIREDTRIANGLE,mmg2d_unset_requiredtriangle,$/;"	f
FORTRAN_NAME	API_functionsf_2d.c	/^FORTRAN_NAME(MMG2D_UNSET_REQUIREDVERTEX,mmg2d_unset_requiredvertex,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_COMPUTE_EIGENV,mmg2d_compute_eigenv,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_DOSOL,mmg2d_dosol,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_FREE_EDGES,mmg2d_free_edges,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_FREE_SOLUTIONS,mmg2d_free_solutions,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_FREE_TRIANGLES,mmg2d_free_triangles,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_ADJATRI,mmg2d_get_adjatri,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_ADJAVERTICES,mmg2d_get_adjavertices,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_ADJAVERTICESFAST,mmg2d_get_adjaverticesfast,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_NONBDYEDGE,mmg2d_get_nonbdyedge,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_NUMBEROFNONBDYEDGES,mmg2d_get_numberofnonbdyedges,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_TRIFROMEDGE,mmg2d_get_trifromedge,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_GET_TRISFROMEDGE,mmg2d_get_trisfromedge,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_RESET_VERTICESTAGS,mmg2d_reset_verticestags,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_SETFUNC,mmg2d_setfunc,$/;"	f
FORTRAN_NAME	libmmg2d_toolsf.c	/^FORTRAN_NAME(MMG2D_SET_CONSTANTSIZE,mmg2d_set_constantsize,$/;"	f
FORTRAN_NAME	libmmg2df.c	/^FORTRAN_NAME(MMG2D_MMG2DLIB,mmg2d_mmg2dlib,(MMG5_pMesh *mesh,MMG5_pSol *met$/;"	f
FORTRAN_NAME	libmmg2df.c	/^FORTRAN_NAME(MMG2D_MMG2DLS,mmg2d_mmg2dls,(MMG5_pMesh *mesh,MMG5_pSol *sol,$/;"	f
FORTRAN_NAME	libmmg2df.c	/^FORTRAN_NAME(MMG2D_MMG2DMESH,mmg2d_mmg2dmesh,(MMG5_pMesh *mesh,MMG5_pSol *met$/;"	f
FORTRAN_NAME	libmmg2df.c	/^FORTRAN_NAME(MMG2D_MMG2DMOV,mmg2d_mmg2dmov,(MMG5_pMesh *mesh,MMG5_pSol *met,MMG5_pSol *disp$/;"	f
INTEGER	libmmg2df.h	/^!    INTEGER, INTENT(OUT)          :: retval$/;"	v
Insert_thread	mmg2d.c	/^void *Insert_thread(void *threadid){$/;"	f
KTA	delone_2d.c	27;"	d	file:
KTA	hash_2d.c	26;"	d	file:
KTB	delone_2d.c	28;"	d	file:
KTB	hash_2d.c	27;"	d	file:
METIS_MMG_H	metis_mmg.h	35;"	d
MMG2DLIB_H	libmmg2d.h	35;"	d
MMG2DLIB_H	libmmg2df.h	52;"	d
MMG2D_2dMeshCheck	inout_2d.c	/^int MMG2D_2dMeshCheck(MMG5_pMesh mesh) {$/;"	f
MMG2D_ADJEOK	mmg2d1.c	/^int MMG2D_ADJEOK( MMG5_pMesh mesh, int k, int color1 ) {$/;"	f
MMG2D_ALPHA	mmg2d.h	56;"	d
MMG2D_ALPHAD	mmg2d.h	57;"	d
MMG2D_ANGCORN	mmg2d.h	61;"	d
MMG2D_AREAMIN	delone_2d.c	25;"	d	file:
MMG2D_Alloc_mesh	variadic_2d.c	/^int MMG2D_Alloc_mesh(MMG5_pMesh *mesh, MMG5_pSol *met, MMG5_pSol *ls,$/;"	f	file:
MMG2D_BADKAL	mmg2d.h	59;"	d
MMG2D_Chk_meshData	API_functions_2d.c	/^int MMG2D_Chk_meshData(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_Compute_eigenv	libmmg2d_tools.c	/^int MMG2D_Compute_eigenv(double m[3],double lambda[2],double vp[2][2]) {$/;"	f
MMG2D_DEGTOL	mmg2d9.c	38;"	d	file:
MMG2D_DPARAM_angleDetection	libmmg2d.h	/^    MMG2D_DPARAM_angleDetection,    \/*!< [val], Value for angle detection *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_angleDetection	libmmg2df.h	105;"	d
MMG2D_DPARAM_hausd	libmmg2d.h	/^    MMG2D_DPARAM_hausd,             \/*!< [val], Control global Hausdorff distance (on all the boundary surfaces of the mesh) *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_hausd	libmmg2df.h	111;"	d
MMG2D_DPARAM_hgrad	libmmg2d.h	/^    MMG2D_DPARAM_hgrad,             \/*!< [val], Control gradation *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_hgrad	libmmg2df.h	113;"	d
MMG2D_DPARAM_hgradreq	libmmg2d.h	/^    MMG2D_DPARAM_hgradreq,          \/*!< [val], Control gradation on required entites (advanced usage) *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_hmax	libmmg2d.h	/^    MMG2D_DPARAM_hmax,              \/*!< [val], Maximal mesh size *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_hmax	libmmg2df.h	109;"	d
MMG2D_DPARAM_hmin	libmmg2d.h	/^    MMG2D_DPARAM_hmin,              \/*!< [val], Minimal mesh size *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_hmin	libmmg2df.h	107;"	d
MMG2D_DPARAM_hsiz	libmmg2d.h	/^    MMG2D_DPARAM_hsiz,              \/*!< [val], Constant mesh size *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_ls	libmmg2d.h	/^    MMG2D_DPARAM_ls,                \/*!< [val], Value of level-set *\/$/;"	e	enum:MMG2D_Param
MMG2D_DPARAM_ls	libmmg2df.h	115;"	d
MMG2D_DPARAM_rmc	libmmg2d.h	/^    MMG2D_DPARAM_rmc,               \/*!< [-1\/val], Remove small connex componants in level-set mode *\/$/;"	e	enum:MMG2D_Param
MMG2D_EOK	mmg2d.h	75;"	d
MMG2D_EPSA	mmg2d.h	52;"	d
MMG2D_EPSD	mmg2d.h	51;"	d
MMG2D_Free_all	API_functions_2d.c	/^int MMG2D_Free_all(const int starter,...)$/;"	f
MMG2D_Free_allSols	API_functions_2d.c	/^int MMG2D_Free_allSols(MMG5_pMesh mesh,MMG5_pSol *sol) {$/;"	f
MMG2D_Free_all_var	variadic_2d.c	/^int MMG2D_Free_all_var(va_list argptr)$/;"	f
MMG2D_Free_edges	libmmg2d_tools.c	/^void MMG2D_Free_edges(MMG5_pMesh mesh) {$/;"	f
MMG2D_Free_names	API_functions_2d.c	/^int MMG2D_Free_names(const int starter,...)$/;"	f
MMG2D_Free_names_var	variadic_2d.c	/^int MMG2D_Free_names_var(va_list argptr)$/;"	f
MMG2D_Free_solutions	libmmg2d_tools.c	/^void MMG2D_Free_solutions(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_Free_structures	API_functions_2d.c	/^int MMG2D_Free_structures(const int starter,...)$/;"	f
MMG2D_Free_structures_var	variadic_2d.c	/^int MMG2D_Free_structures_var(va_list argptr)$/;"	f
MMG2D_Free_triangles	libmmg2d_tools.c	/^void MMG2D_Free_triangles(MMG5_pMesh mesh) {$/;"	f
MMG2D_GetByIdx_vertex	API_functions_2d.c	/^int MMG2D_GetByIdx_vertex(MMG5_pMesh mesh, double* c0, double* c1, int* ref,$/;"	f
MMG2D_Get_adjaTri	libmmg2d_tools.c	/^int MMG2D_Get_adjaTri(MMG5_pMesh mesh, int kel, int listri[3]) {$/;"	f
MMG2D_Get_adjaVertices	libmmg2d_tools.c	/^int MMG2D_Get_adjaVertices(MMG5_pMesh mesh, int ip, int lispoi[MMG2D_LMAX])$/;"	f
MMG2D_Get_adjaVerticesFast	libmmg2d_tools.c	/^int MMG2D_Get_adjaVerticesFast(MMG5_pMesh mesh, int ip,int start, int lispoi[MMG2D_LMAX])$/;"	f
MMG2D_Get_edge	API_functions_2d.c	/^int MMG2D_Get_edge(MMG5_pMesh mesh, int* e0, int* e1, int* ref$/;"	f
MMG2D_Get_edges	API_functions_2d.c	/^int MMG2D_Get_edges(MMG5_pMesh mesh, int* edges,int *refs,int* areRidges,int* areRequired) {$/;"	f
MMG2D_Get_ithSol_inSolsAtVertices	API_functions_2d.c	/^int  MMG2D_Get_ithSol_inSolsAtVertices(MMG5_pSol sol,int i, double *s,int pos) {$/;"	f
MMG2D_Get_ithSols_inSolsAtVertices	API_functions_2d.c	/^int  MMG2D_Get_ithSols_inSolsAtVertices(MMG5_pSol sol,int i, double *s) {$/;"	f
MMG2D_Get_meshSize	API_functions_2d.c	/^int MMG2D_Get_meshSize(MMG5_pMesh mesh, int* np, int* nt, int* nquad, int* na) {$/;"	f
MMG2D_Get_nonBdyEdge	libmmg2d_tools.c	/^int MMG2D_Get_nonBdyEdge(MMG5_pMesh mesh, int* e0, int* e1, int* ref, int idx) {$/;"	f
MMG2D_Get_numberOfNonBdyEdges	libmmg2d_tools.c	/^int MMG2D_Get_numberOfNonBdyEdges(MMG5_pMesh mesh, int* nb_edges) {$/;"	f
MMG2D_Get_quadrilateral	API_functions_2d.c	/^int MMG2D_Get_quadrilateral(MMG5_pMesh mesh, int* v0, int* v1, int* v2, int* v3,$/;"	f
MMG2D_Get_quadrilaterals	API_functions_2d.c	/^int  MMG2D_Get_quadrilaterals(MMG5_pMesh mesh, int *quadra, int *refs, int * areRequired) {$/;"	f
MMG2D_Get_scalarSol	API_functions_2d.c	/^int  MMG2D_Get_scalarSol(MMG5_pSol met, double* s)$/;"	f
MMG2D_Get_scalarSols	API_functions_2d.c	/^int  MMG2D_Get_scalarSols(MMG5_pSol met, double* s) {$/;"	f
MMG2D_Get_solSize	API_functions_2d.c	/^int MMG2D_Get_solSize(MMG5_pMesh mesh, MMG5_pSol sol, int* typEntity, int* np,$/;"	f
MMG2D_Get_solsAtVerticesSize	API_functions_2d.c	/^int MMG2D_Get_solsAtVerticesSize(MMG5_pMesh mesh, MMG5_pSol *sol, int *nsols,$/;"	f
MMG2D_Get_tensorSol	API_functions_2d.c	/^int MMG2D_Get_tensorSol(MMG5_pSol met, double *m11,double *m12,double *m22)$/;"	f
MMG2D_Get_tensorSols	API_functions_2d.c	/^int MMG2D_Get_tensorSols(MMG5_pSol met, double *sols) {$/;"	f
MMG2D_Get_triFromEdge	libmmg2d_tools.c	/^int MMG2D_Get_triFromEdge(MMG5_pMesh mesh, int ked, int *ktri, int *ied)$/;"	f
MMG2D_Get_triangle	API_functions_2d.c	/^int MMG2D_Get_triangle(MMG5_pMesh mesh, int* v0, int* v1, int* v2, int* ref$/;"	f
MMG2D_Get_triangleQuality	API_functions_2d.c	/^double MMG2D_Get_triangleQuality(MMG5_pMesh mesh,MMG5_pSol met, int k) {$/;"	f
MMG2D_Get_triangles	API_functions_2d.c	/^int  MMG2D_Get_triangles(MMG5_pMesh mesh, int* tria, int* refs,$/;"	f
MMG2D_Get_trisFromEdge	libmmg2d_tools.c	/^int MMG2D_Get_trisFromEdge(MMG5_pMesh mesh, int ked, int ktri[2], int ied[2])$/;"	f
MMG2D_Get_vectorSol	API_functions_2d.c	/^int MMG2D_Get_vectorSol(MMG5_pSol met, double* vx, double* vy) {$/;"	f
MMG2D_Get_vectorSols	API_functions_2d.c	/^int MMG2D_Get_vectorSols(MMG5_pSol met, double* sols) {$/;"	f
MMG2D_Get_vertex	API_functions_2d.c	/^int MMG2D_Get_vertex(MMG5_pMesh mesh, double* c0, double* c1, int* ref,$/;"	f
MMG2D_Get_vertices	API_functions_2d.c	/^int  MMG2D_Get_vertices(MMG5_pMesh mesh, double* vertices, int* refs,$/;"	f
MMG2D_H	mmg2d.h	24;"	d
MMG2D_IPARAM_3dMedit	libmmg2d.h	/^    MMG2D_IPARAM_3dMedit,           \/*!< [0\/1\/2], Read\/write 2D mesh in 3D (Medit only). out if val=1 in\/out if val=2 *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_angle	libmmg2d.h	/^    MMG2D_IPARAM_angle,             \/*!< [1\/0], Turn on\/off angle detection *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_angle	libmmg2df.h	83;"	d
MMG2D_IPARAM_anisosize	libmmg2d.h	/^    MMG2D_IPARAM_anisosize,                 \/*!< [1\/0], Turn on\/off anisotropic metric creation when no metric is provided *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_bucket	libmmg2df.h	103;"	d
MMG2D_IPARAM_debug	libmmg2d.h	/^    MMG2D_IPARAM_debug,             \/*!< [1\/0], Turn on\/off debug mode *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_debug	libmmg2df.h	81;"	d
MMG2D_IPARAM_iso	libmmg2d.h	/^    MMG2D_IPARAM_iso,               \/*!< [1\/0], Level-set meshing *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_iso	libmmg2df.h	85;"	d
MMG2D_IPARAM_lag	libmmg2d.h	/^    MMG2D_IPARAM_lag,               \/*!< [-1\/0\/1\/2], Lagrangian option *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_lag	libmmg2df.h	87;"	d
MMG2D_IPARAM_mem	libmmg2d.h	/^    MMG2D_IPARAM_mem,               \/*!< [n\/-1], Set memory size to n Mbytes or keep the default value *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_mem	libmmg2df.h	79;"	d
MMG2D_IPARAM_msh	libmmg2df.h	89;"	d
MMG2D_IPARAM_nofem	libmmg2d.h	/^    MMG2D_IPARAM_nofem,             \/*!< [1\/0], Generate a non finite element mesh *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_noinsert	libmmg2d.h	/^    MMG2D_IPARAM_noinsert,          \/*!< [1\/0], Avoid\/allow point insertion *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_noinsert	libmmg2df.h	95;"	d
MMG2D_IPARAM_nomove	libmmg2d.h	/^    MMG2D_IPARAM_nomove,            \/*!< [1\/0], Avoid\/allow point relocation *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_nomove	libmmg2df.h	99;"	d
MMG2D_IPARAM_nosizreq	libmmg2d.h	/^    MMG2D_IPARAM_nosizreq,          \/*!< [0\/1], Allow\/avoid overwritten of sizes at required points (advanced usage) *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_nosurf	libmmg2d.h	/^    MMG2D_IPARAM_nosurf,            \/*!< [1\/0], Avoid\/allow surface modifications *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_nosurf	libmmg2df.h	101;"	d
MMG2D_IPARAM_noswap	libmmg2d.h	/^    MMG2D_IPARAM_noswap,            \/*!< [1\/0], Avoid\/allow edge or face flipping *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_noswap	libmmg2df.h	97;"	d
MMG2D_IPARAM_nreg	libmmg2d.h	/^    MMG2D_IPARAM_nreg,              \/*!< [0\/1], Enable normal regularization *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_numberOfLocalParam	libmmg2d.h	/^    MMG2D_IPARAM_numberOfLocalParam,\/*!< [n], Number of local parameters *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_numberOfMat	libmmg2d.h	/^    MMG2D_IPARAM_numberOfMat,       \/*!< [n], Number of material in ls mode *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_numsubdomain	libmmg2d.h	/^    MMG2D_IPARAM_numsubdomain,      \/*!< [0\/n], Save the subdomain nb (0==all subdomain) *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_numsubdomain	libmmg2df.h	91;"	d
MMG2D_IPARAM_opnbdy	libmmg2d.h	/^    MMG2D_IPARAM_opnbdy,            \/*!< [1\/0], Preserve edges at interface of 2 domains with same reference *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_optim	libmmg2d.h	/^    MMG2D_IPARAM_optim,             \/*!< [1\/0], Optimize mesh keeping its initial edge sizes *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_optim	libmmg2df.h	93;"	d
MMG2D_IPARAM_verbose	libmmg2d.h	/^    MMG2D_IPARAM_verbose,           \/*!< [-1..10], Tune level of verbosity *\/$/;"	e	enum:MMG2D_Param
MMG2D_IPARAM_verbose	libmmg2df.h	77;"	d
MMG2D_Init_fileNames	API_functions_2d.c	/^void MMG2D_Init_fileNames(MMG5_pMesh mesh,MMG5_pSol sol$/;"	f
MMG2D_Init_mesh	API_functions_2d.c	/^int MMG2D_Init_mesh(const int starter,...) {$/;"	f
MMG2D_Init_mesh_var	variadic_2d.c	/^int MMG2D_Init_mesh_var( va_list argptr ) {$/;"	f
MMG2D_Init_parameters	API_functions_2d.c	/^void MMG2D_Init_parameters(MMG5_pMesh mesh) {$/;"	f
MMG2D_Init_woalloc_mesh	variadic_2d.c	/^void MMG2D_Init_woalloc_mesh(MMG5_pMesh *mesh, MMG5_pSol *met,MMG5_pSol *ls,MMG5_pSol *disp) {$/;"	f	file:
MMG2D_LLONG	mmg2d.h	66;"	d
MMG2D_LMAX	libmmg2d.h	46;"	d
MMG2D_LMAX	libmmg2df.h	64;"	d
MMG2D_LONMAX	mmg2d.h	58;"	d
MMG2D_LOPTL	mmg2d.h	68;"	d
MMG2D_LOPTS	mmg2d.h	69;"	d
MMG2D_LPARMAX	mmg2d.h	63;"	d
MMG2D_LSHRT	mmg2d.h	67;"	d
MMG2D_NEDMAX	mmg2d.h	72;"	d
MMG2D_NEMAX	mmg2d.h	73;"	d
MMG2D_NPMAX	mmg2d.h	71;"	d
MMG2D_NULKAL	mmg2d.h	60;"	d
MMG2D_POINT_REALLOC	mmg2d.h	138;"	d
MMG2D_PRECI	mmg2d.h	54;"	d
MMG2D_Param	libmmg2d.h	/^  enum MMG2D_Param {$/;"	g
MMG2D_RETURN_AND_FREE	mmg2d.h	81;"	d
MMG2D_RETURN_AND_PACK	libmmg2d.c	30;"	d	file:
MMG2D_Reset_verticestags	libmmg2d_tools.c	/^void MMG2D_Reset_verticestags(MMG5_pMesh mesh) {$/;"	f
MMG2D_SHORTMAX	mmg2d.h	62;"	d
MMG2D_SIZE	mmg2d.h	55;"	d
MMG2D_Set_commonFunc	mmg2d.h	/^void MMG2D_Set_commonFunc(void) {$/;"	f
MMG2D_Set_constantSize	libmmg2d_tools.c	/^int MMG2D_Set_constantSize(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_Set_corner	API_functions_2d.c	/^int MMG2D_Set_corner(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Set_dparameter	API_functions_2d.c	/^int MMG2D_Set_dparameter(MMG5_pMesh mesh, MMG5_pSol sol, int dparam, double val){$/;"	f
MMG2D_Set_edge	API_functions_2d.c	/^int MMG2D_Set_edge(MMG5_pMesh mesh, int v0, int v1, int ref, int pos) {$/;"	f
MMG2D_Set_edges	API_functions_2d.c	/^int MMG2D_Set_edges(MMG5_pMesh mesh, int *edges, int *refs) {$/;"	f
MMG2D_Set_inputMeshName	API_functions_2d.c	/^int MMG2D_Set_inputMeshName(MMG5_pMesh mesh, const char* meshin) {$/;"	f
MMG2D_Set_inputSolName	API_functions_2d.c	/^int MMG2D_Set_inputSolName(MMG5_pMesh mesh,MMG5_pSol sol, const char* solin) {$/;"	f
MMG2D_Set_iparameter	API_functions_2d.c	/^int MMG2D_Set_iparameter(MMG5_pMesh mesh, MMG5_pSol sol, int iparam, int val){$/;"	f
MMG2D_Set_ithSol_inSolsAtVertices	API_functions_2d.c	/^int  MMG2D_Set_ithSol_inSolsAtVertices(MMG5_pSol sol,int i, double* s,int pos) {$/;"	f
MMG2D_Set_ithSols_inSolsAtVertices	API_functions_2d.c	/^int  MMG2D_Set_ithSols_inSolsAtVertices(MMG5_pSol sol,int i, double *s) {$/;"	f
MMG2D_Set_localParameter	API_functions_2d.c	/^int MMG2D_Set_localParameter(MMG5_pMesh mesh,MMG5_pSol sol, int typ, int ref,$/;"	f
MMG2D_Set_meshSize	API_functions_2d.c	/^int MMG2D_Set_meshSize(MMG5_pMesh mesh, int np, int nt, int nquad, int na) {$/;"	f
MMG2D_Set_multiMat	API_functions_2d.c	/^int MMG2D_Set_multiMat(MMG5_pMesh mesh,MMG5_pSol sol,int ref,$/;"	f
MMG2D_Set_outputMeshName	API_functions_2d.c	/^int MMG2D_Set_outputMeshName(MMG5_pMesh mesh, const char* meshout) {$/;"	f
MMG2D_Set_outputSolName	API_functions_2d.c	/^int MMG2D_Set_outputSolName(MMG5_pMesh mesh,MMG5_pSol sol, const char* solout) {$/;"	f
MMG2D_Set_parallelEdge	API_functions_2d.c	/^int MMG2D_Set_parallelEdge(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Set_quadrilateral	API_functions_2d.c	/^int MMG2D_Set_quadrilateral(MMG5_pMesh mesh, int v0, int v1, int v2, int v3, int ref, int pos) {$/;"	f
MMG2D_Set_quadrilaterals	API_functions_2d.c	/^int  MMG2D_Set_quadrilaterals(MMG5_pMesh mesh, int *quadra, int *refs) {$/;"	f
MMG2D_Set_requiredEdge	API_functions_2d.c	/^int MMG2D_Set_requiredEdge(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Set_requiredTriangle	API_functions_2d.c	/^int MMG2D_Set_requiredTriangle(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Set_requiredVertex	API_functions_2d.c	/^int MMG2D_Set_requiredVertex(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Set_scalarSol	API_functions_2d.c	/^int MMG2D_Set_scalarSol(MMG5_pSol met, double s, int pos) {$/;"	f
MMG2D_Set_scalarSols	API_functions_2d.c	/^int  MMG2D_Set_scalarSols(MMG5_pSol met, double *s) {$/;"	f
MMG2D_Set_solSize	API_functions_2d.c	/^int MMG2D_Set_solSize(MMG5_pMesh mesh, MMG5_pSol sol, int typEntity, int np, int typSol) {$/;"	f
MMG2D_Set_solsAtVerticesSize	API_functions_2d.c	/^int MMG2D_Set_solsAtVerticesSize(MMG5_pMesh mesh, MMG5_pSol *sol,int nsols,$/;"	f
MMG2D_Set_tensorSol	API_functions_2d.c	/^int MMG2D_Set_tensorSol(MMG5_pSol met, double m11, double m12, double m22,$/;"	f
MMG2D_Set_tensorSols	API_functions_2d.c	/^int MMG2D_Set_tensorSols(MMG5_pSol met, double *sols) {$/;"	f
MMG2D_Set_triangle	API_functions_2d.c	/^int MMG2D_Set_triangle(MMG5_pMesh mesh, int v0, int v1, int v2, int ref, int pos) {$/;"	f
MMG2D_Set_triangles	API_functions_2d.c	/^int  MMG2D_Set_triangles(MMG5_pMesh mesh, int *tria, int *refs) {$/;"	f
MMG2D_Set_vectorSol	API_functions_2d.c	/^int MMG2D_Set_vectorSol(MMG5_pSol met, double vx,double vy, int pos) {$/;"	f
MMG2D_Set_vectorSols	API_functions_2d.c	/^int MMG2D_Set_vectorSols(MMG5_pSol met, double *sols) {$/;"	f
MMG2D_Set_vertex	API_functions_2d.c	/^int MMG2D_Set_vertex(MMG5_pMesh mesh, double c0, double c1, int ref, int pos) {$/;"	f
MMG2D_Set_vertices	API_functions_2d.c	/^int  MMG2D_Set_vertices(MMG5_pMesh mesh, double *vertices,int *refs) {$/;"	f
MMG2D_TRIA_REALLOC	mmg2d.h	169;"	d
MMG2D_Unset_corner	API_functions_2d.c	/^int MMG2D_Unset_corner(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Unset_requiredEdge	API_functions_2d.c	/^int MMG2D_Unset_requiredEdge(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Unset_requiredTriangle	API_functions_2d.c	/^int MMG2D_Unset_requiredTriangle(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_Unset_requiredVertex	API_functions_2d.c	/^int MMG2D_Unset_requiredVertex(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_VOLFRAC	mmg2d.h	64;"	d
MMG2D_adpcol	mmg2d1.c	/^int MMG2D_adpcol(MMG5_pMesh mesh,MMG5_pSol met, int color1) {$/;"	f
MMG2D_adpspl	mmg2d1.c	/^int MMG2D_adpspl(MMG5_pMesh mesh,MMG5_pSol met, int color1) {$/;"	f
MMG2D_adptri	mmg2d1.c	/^int MMG2D_adptri(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_anaelt	mmg2d1.c	/^int MMG2D_anaelt(MMG5_pMesh mesh,MMG5_pSol met, MMG5_Hash *hash, int typchk,int color1) {$/;"	f
MMG2D_analys	analys_2d.c	/^int MMG2D_analys(MMG5_pMesh mesh) {$/;"	f
MMG2D_anatri	mmg2d1.c	/^int MMG2D_anatri(MMG5_pMesh mesh,MMG5_pSol met,int8_t typchk) {$/;"	f
MMG2D_assignEdge	hash_2d.c	/^int MMG2D_assignEdge(MMG5_pMesh mesh) {$/;"	f
MMG2D_bdryEdge	hash_2d.c	/^int MMG2D_bdryEdge(MMG5_pMesh mesh) {$/;"	f
MMG2D_bdryenforcement	enforcement_2d.c	/^int MMG2D_bdryenforcement(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_bezierCurv	bezier_2d.c	/^int MMG2D_bezierCurv(MMG5_pMesh mesh,int k,int8_t i,double s,double *o,double *no) {$/;"	f
MMG2D_bouleendp	boulep_2d.c	/^int MMG2D_bouleendp(MMG5_pMesh mesh,int start,int8_t ip,int *ip1,int *ip2) {$/;"	f
MMG2D_boulen	boulep_2d.c	/^int MMG2D_boulen(MMG5_pMesh mesh, int start,int8_t ip, int *pleft, int *pright, double *nn) {$/;"	f
MMG2D_boulep	boulep_2d.c	/^int MMG2D_boulep(MMG5_pMesh mesh, int ifirst, int iploc, int * list) {$/;"	f
MMG2D_boulet	boulep_2d.c	/^int MMG2D_boulet(MMG5_pMesh mesh,int start,int8_t ip,int *list) {$/;"	f
MMG2D_caltri	mmg2dexterns.c	/^double (*MMG2D_caltri)(MMG5_pMesh ,MMG5_pSol ,MMG5_pTria )=NULL;$/;"	v
MMG2D_caltri_ani	quality_2d.c	/^double MMG2D_caltri_ani(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pTria pt) {$/;"	f
MMG2D_caltri_iso	quality_2d.c	/^double MMG2D_caltri_iso(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pTria pt) {$/;"	f
MMG2D_caltri_iso_3pt	mmg2d9.c	/^inline double MMG2D_caltri_iso_3pt(double *a,double *b,double *c) {$/;"	f	file:
MMG2D_cavity	delone_2d.c	/^int MMG2D_cavity(MMG5_pMesh mesh,MMG5_pSol sol,int ip,int *list) {$/;"	f
MMG2D_cenrad_iso	cenrad_2d.c	/^int MMG2D_cenrad_iso(MMG5_pMesh mesh,double *ct,double *c,double *rad) {$/;"	f
MMG2D_chkcol	colver_2d.c	/^int MMG2D_chkcol(MMG5_pMesh mesh, MMG5_pSol met,int k,int8_t i,int *list,int8_t typchk) {$/;"	f
MMG2D_chkedg	bezier_2d.c	/^int MMG2D_chkedg(MMG5_pMesh mesh, int k) {$/;"	f
MMG2D_chkmaniball	mmg2d6.c	/^int MMG2D_chkmaniball(MMG5_pMesh mesh, int start, int8_t istart) {$/;"	f
MMG2D_chkmanimesh	mmg2d6.c	/^int MMG2D_chkmanimesh(MMG5_pMesh mesh) {$/;"	f
MMG2D_chkmovmesh	mmg2d9.c	/^int MMG2D_chkmovmesh(MMG5_pMesh mesh,MMG5_pSol disp,short t,int *triIdx) {$/;"	f
MMG2D_chkmsh	chkmsh_2d.c	/^int MMG2D_chkmsh(MMG5_pMesh mesh) {$/;"	f
MMG2D_chkor	chkmsh_2d.c	/^int MMG2D_chkor(MMG5_pMesh mesh) {$/;"	f
MMG2D_chkspl	split_2d.c	/^int MMG2D_chkspl(MMG5_pMesh mesh,MMG5_pSol met,int k,int8_t i) {$/;"	f
MMG2D_chkswp	swapar_2d.c	/^int MMG2D_chkswp(MMG5_pMesh mesh, MMG5_pSol met,int k,int8_t i,int8_t typchk) {$/;"	f
MMG2D_colelt	mmg2d1.c	/^int MMG2D_colelt(MMG5_pMesh mesh,MMG5_pSol met,int typchk,int color1) {$/;"	f
MMG2D_coleltlag	mmg2d9.c	/^static int MMG2D_coleltlag(MMG5_pMesh mesh,MMG5_pSol met,int itdeg) {$/;"	f	file:
MMG2D_colver	colver_2d.c	/^int MMG2D_colver(MMG5_pMesh mesh,int ilist,int *list) {$/;"	f
MMG2D_colver2	colver_2d.c	/^int MMG2D_colver2(MMG5_pMesh mesh,int *list) {$/;"	f
MMG2D_colver3	colver_2d.c	/^int MMG2D_colver3(MMG5_pMesh mesh,int *list) {$/;"	f
MMG2D_coorbary	locate_2d.c	/^int MMG2D_coorbary(MMG5_pMesh mesh,MMG5_pTria pt,double c[2],double* det,double* l1,double* l2) {$/;"	f
MMG2D_correction_iso	delone_2d.c	/^static int MMG2D_correction_iso(MMG5_pMesh mesh,int ip,int *list,int ilist,int nedep) {$/;"	f	file:
MMG2D_countLocalParamAtEdg	mmg2d.c	/^int MMG2D_countLocalParamAtEdg( MMG5_pMesh mesh,MMG5_iNode **bdyRefs) {$/;"	f	file:
MMG2D_cutEdge	locate_2d.c	/^int MMG2D_cutEdge(MMG5_pMesh mesh,MMG5_pTria pt,MMG5_pPoint ppa,MMG5_pPoint ppb) {$/;"	f
MMG2D_cutEdgeTriangle	locate_2d.c	/^int MMG2D_cutEdgeTriangle(MMG5_pMesh mesh,int k,int ia,int ib) {$/;"	f
MMG2D_cuttri_ls	mmg2d6.c	/^int MMG2D_cuttri_ls(MMG5_pMesh mesh, MMG5_pSol sol, MMG5_pSol met){$/;"	f
MMG2D_defaultOption	mmg2d.c	/^int MMG2D_defaultOption(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pSol sol) {$/;"	f	file:
MMG2D_defaultmet_2d	anisosiz_2d.c	/^int MMG2D_defaultmet_2d(MMG5_pMesh mesh,MMG5_pSol met,int k,int8_t i) {$/;"	f
MMG2D_defmetbdy_2d	anisosiz_2d.c	/^int MMG2D_defmetbdy_2d(MMG5_pMesh mesh,MMG5_pSol met,int k,int8_t i) {$/;"	f
MMG2D_defsiz	mmg2dexterns.c	/^int    (*MMG2D_defsiz)(MMG5_pMesh ,MMG5_pSol )=NULL;$/;"	v
MMG2D_defsiz_ani	anisosiz_2d.c	/^int MMG2D_defsiz_ani(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_defsiz_iso	isosiz_2d.c	/^int MMG2D_defsiz_iso(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_delElt	zaldy_2d.c	/^int MMG2D_delElt(MMG5_pMesh mesh,int iel) {$/;"	f
MMG2D_delPt	zaldy_2d.c	/^void MMG2D_delPt(MMG5_pMesh mesh,int ip) {$/;"	f
MMG2D_delone	delone_2d.c	/^int MMG2D_delone(MMG5_pMesh mesh,MMG5_pSol sol,int ip,int *list,int ilist) {$/;"	f
MMG2D_dichoto	mmg2d1.c	/^int MMG2D_dichoto(MMG5_pMesh mesh,MMG5_pSol met,int k,int *vx) {$/;"	f
MMG2D_dikomv	mmg2d9.c	/^short MMG2D_dikomv(MMG5_pMesh mesh,MMG5_pSol disp,short *lastt) {$/;"	f
MMG2D_dispmesh	mmg2d9.c	/^int MMG2D_dispmesh(MMG5_pMesh mesh,MMG5_pSol disp,short t,int itdeg) {$/;"	f
MMG2D_doSol	solmap_2d.c	/^int MMG2D_doSol(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_estavglen	mmg2d9.c	/^double MMG2D_estavglen(MMG5_pMesh mesh) {$/;"	f
MMG2D_excfun	mmg2d.h	/^void MMG2D_excfun(int sigid) {$/;"	f
MMG2D_findTria	locate_2d.c	/^int MMG2D_findTria(MMG5_pMesh mesh,int ip) {$/;"	f
MMG2D_findtrianglestate	mmg2d2.c	/^int MMG2D_findtrianglestate(MMG5_pMesh mesh,int k,int ip1,int ip2,int ip3,int ip4,int base) {$/;"	f
MMG2D_freeLocalPar	libmmg2d_tools.c	/^int MMG2D_freeLocalPar(MMG5_pMesh mesh) {$/;"	f
MMG2D_grad2met_ani	anisosiz_2d.c	/^int MMG2D_grad2met_ani(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pTria pt,int np1,int np2) {$/;"	f
MMG2D_grad2metreq_ani	anisosiz_2d.c	/^int MMG2D_grad2metreq_ani(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pTria pt,$/;"	f
MMG2D_gradEigenv	anisosiz_2d.c	/^void MMG2D_gradEigenv(double dm[2],double dn[2],double difsiz,int8_t dir,int8_t *ier) {$/;"	f	file:
MMG2D_gradsiz	mmg2dexterns.c	/^int    (*MMG2D_gradsiz)(MMG5_pMesh ,MMG5_pSol )=NULL;$/;"	v
MMG2D_gradsizreq	mmg2dexterns.c	/^int    (*MMG2D_gradsizreq)(MMG5_pMesh ,MMG5_pSol )=NULL;$/;"	v
MMG2D_hashEdgeDelone	delone_2d.c	/^static int MMG2D_hashEdgeDelone(MMG5_pMesh mesh,MMG5_Hash *hash,int iel,int i) {$/;"	f	file:
MMG2D_hashQuad	hash_2d.c	/^int MMG2D_hashQuad(MMG5_pMesh mesh) {$/;"	f
MMG2D_hashTria	hash_2d.c	/^int MMG2D_hashTria(MMG5_pMesh mesh) {$/;"	f
MMG2D_iare	mmg2d.h	/^static const int MMG2D_iare[3][2] = {{1,2},{2,0},{0,1}};$/;"	v
MMG2D_idir	mmg2d.h	/^static const unsigned int MMG2D_idir[5] = {0,1,2,0,1};$/;"	v
MMG2D_idir_q	mmg2d.h	/^static const uint8_t MMG2D_idir_q[4][2] = { {0,1},{0,3},{1,2},{2,3} };$/;"	v
MMG2D_indElt	tools_2d.c	/^int MMG2D_indElt(MMG5_pMesh mesh, int kel) {$/;"	f
MMG2D_indPt	tools_2d.c	/^int MMG2D_indPt(MMG5_pMesh mesh, int kp) {$/;"	f
MMG2D_insertpointdelone	mmg2d2.c	/^int MMG2D_insertpointdelone(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_intmet	mmg2dexterns.c	/^int    (*MMG2D_intmet)(MMG5_pMesh ,MMG5_pSol ,int ,int8_t ,int ,double )=NULL;$/;"	v
MMG2D_intmet_ani	intmet_2d.c	/^int MMG2D_intmet_ani(MMG5_pMesh mesh,MMG5_pSol met,int k,int8_t i,int ip,double s) {$/;"	f
MMG2D_intmet_iso	intmet_2d.c	/^int MMG2D_intmet_iso(MMG5_pMesh mesh,MMG5_pSol met,int k,int8_t i,int ip,double s) {$/;"	f
MMG2D_inxt	mmg2d.h	/^static const unsigned int MMG2D_inxt[5] = {1,2,0,1,2};$/;"	v
MMG2D_iopp	mmg2d.h	/^static const int MMG2D_iopp[3][2] = {{1,2},{0,2},{0,1}};$/;"	v
MMG2D_isInTriangle	locate_2d.c	/^int MMG2D_isInTriangle(MMG5_pMesh mesh,int k,double c[2]) {$/;"	f
MMG2D_ismaniball	mmg2d6.c	/^int MMG2D_ismaniball(MMG5_pMesh mesh, MMG5_pSol sol, int start, int8_t istart) {$/;"	f
MMG2D_keep_only1Subdomain	tools_2d.c	/^void MMG2D_keep_only1Subdomain ( MMG5_pMesh mesh,int nsd ) {$/;"	f
MMG2D_lencurv	mmg2dexterns.c	/^double (*MMG2D_lencurv)(MMG5_pMesh ,MMG5_pSol ,int ,int )=NULL;$/;"	v
MMG2D_lencurv_ani	length_2d.c	/^double MMG2D_lencurv_ani(MMG5_pMesh mesh,MMG5_pSol met,int ip1,int ip2) {$/;"	f
MMG2D_lencurv_iso	length_2d.c	/^double MMG2D_lencurv_iso(MMG5_pMesh mesh,MMG5_pSol met,int ip1,int ip2) {$/;"	f
MMG2D_loadAllSols	inout_2d.c	/^int MMG2D_loadAllSols(MMG5_pMesh mesh,MMG5_pSol *sol, const char *filename) {$/;"	f
MMG2D_loadMesh	inout_2d.c	/^int MMG2D_loadMesh(MMG5_pMesh mesh,const char *filename) {$/;"	f
MMG2D_loadMshMesh	inout_2d.c	/^int MMG2D_loadMshMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_loadMshMesh_and_allData	inout_2d.c	/^int MMG2D_loadMshMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_loadSol	inout_2d.c	/^int MMG2D_loadSol(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_loadVtkMesh	inoutcpp_2d.cpp	/^int MMG2D_loadVtkMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_loadVtkMesh_and_allData	inoutcpp_2d.cpp	/^int MMG2D_loadVtkMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_loadVtkMesh_part2	inoutcpp_2d.cpp	/^static int MMG2D_loadVtkMesh_part2 ( MMG5_pMesh mesh,MMG5_pSol *sol,$/;"	f	file:
MMG2D_loadVtpMesh	inoutcpp_2d.cpp	/^int MMG2D_loadVtpMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_loadVtpMesh_and_allData	inoutcpp_2d.cpp	/^int MMG2D_loadVtpMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_loadVtuMesh	inoutcpp_2d.cpp	/^int MMG2D_loadVtuMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_loadVtuMesh_and_allData	inoutcpp_2d.cpp	/^int MMG2D_loadVtuMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_locateEdge	locate_2d.c	/^int MMG2D_locateEdge(MMG5_pMesh mesh,int ia,int ib,int* kdep,int* list) {$/;"	f
MMG2D_markSD	mmg2d2.c	/^int MMG2D_markSD(MMG5_pMesh mesh) {$/;"	f
MMG2D_memOption	zaldy_2d.c	/^int MMG2D_memOption(MMG5_pMesh mesh) {$/;"	f
MMG2D_memOption_memSet	zaldy_2d.c	/^int MMG2D_memOption_memSet(MMG5_pMesh mesh) {$/;"	f	file:
MMG2D_mmg2d1n	mmg2d1.c	/^int MMG2D_mmg2d1n(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_mmg2d2	mmg2d2.c	/^int MMG2D_mmg2d2(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_mmg2d6	mmg2d6.c	/^int MMG2D_mmg2d6(MMG5_pMesh mesh, MMG5_pSol sol,MMG5_pSol met) {$/;"	f
MMG2D_mmg2d9	mmg2d9.c	/^int MMG2D_mmg2d9(MMG5_pMesh mesh,MMG5_pSol disp,MMG5_pSol met,int **invalidTrias) {$/;"	f
MMG2D_mmg2dlib	libmmg2d.c	/^int MMG2D_mmg2dlib(MMG5_pMesh mesh,MMG5_pSol met)$/;"	f
MMG2D_mmg2dls	libmmg2d.c	/^int MMG2D_mmg2dls(MMG5_pMesh mesh,MMG5_pSol sol,MMG5_pSol umet)$/;"	f
MMG2D_mmg2dmesh	libmmg2d.c	/^int MMG2D_mmg2dmesh(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_mmg2dmov	libmmg2d.c	/^int MMG2D_mmg2dmov(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pSol disp) {$/;"	f
MMG2D_movedgpt	movpt_2d.c	/^int MMG2D_movedgpt(MMG5_pMesh mesh,MMG5_pSol met,int ilist,int *list, int8_t improve) {$/;"	f
MMG2D_movintpt	movpt_2d.c	/^int MMG2D_movintpt(MMG5_pMesh mesh,MMG5_pSol met,int ilist,int *list,int8_t improve) {$/;"	f
MMG2D_movintpt_ani	anisomovpt_2d.c	/^int MMG2D_movintpt_ani(MMG5_pMesh mesh,MMG5_pSol met,int ilist,int *list,int8_t improve) {$/;"	f
MMG2D_movtri	mmg2d1.c	/^int MMG2D_movtri(MMG5_pMesh mesh,MMG5_pSol met,int maxit,int8_t improve, int color1) {$/;"	f
MMG2D_movtrilag	mmg2d9.c	/^int MMG2D_movtrilag(MMG5_pMesh mesh,MMG5_pSol met,int itdeg) {$/;"	f
MMG2D_newElt	zaldy_2d.c	/^int MMG2D_newElt(MMG5_pMesh mesh) {$/;"	f
MMG2D_newPt	zaldy_2d.c	/^int MMG2D_newPt(MMG5_pMesh mesh,double c[2],int16_t tag) {$/;"	f
MMG2D_norver	analys_2d.c	/^int MMG2D_norver(MMG5_pMesh mesh, int ref) {$/;"	f
MMG2D_outqua	quality_2d.c	/^int MMG2D_outqua(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_overlap	mmg2d1.c	/^int MMG2D_overlap(MMG5_pMesh mesh, idx_t* part)$/;"	f
MMG2D_pack	hash_2d.c	/^int MMG2D_pack(MMG5_pMesh mesh,MMG5_pSol sol,MMG5_pSol met) {$/;"	f
MMG2D_packLS	velextls_2d.c	/^int* MMG2D_packLS(MMG5_pMesh mesh,MMG5_pSol disp,LSst *lsst,int *npfin) {$/;"	f
MMG2D_parsop	libmmg2d_tools.c	/^int MMG2D_parsop(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_prilen	length_2d.c	/^int MMG2D_prilen(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_quickcal	quality_2d.c	/^double MMG2D_quickcal(MMG5_pMesh mesh, MMG5_pTria pt) {$/;"	f
MMG2D_readDoubleSol	inout_2d.c	/^int MMG2D_readDoubleSol(MMG5_pSol sol,FILE *inm,int bin,int iswp,int pos) {$/;"	f	file:
MMG2D_readFloatSol	inout_2d.c	/^int MMG2D_readFloatSol(MMG5_pSol sol,FILE *inm,int bin,int iswp,int pos) {$/;"	f	file:
MMG2D_regnor	analys_2d.c	/^int MMG2D_regnor(MMG5_pMesh mesh) {$/;"	f
MMG2D_removeBBtriangles	mmg2d2.c	/^int MMG2D_removeBBtriangles(MMG5_pMesh mesh) {$/;"	f
MMG2D_resetRef	mmg2d6.c	/^int MMG2D_resetRef(MMG5_pMesh mesh) {$/;"	f
MMG2D_restart	libmmg2d.c	/^int MMG2D_restart(MMG5_pMesh mesh){$/;"	f	file:
MMG2D_rmc	mmg2d6.c	/^int MMG2D_rmc(MMG5_pMesh mesh, MMG5_pSol sol){$/;"	f
MMG2D_saveAllSols	inout_2d.c	/^int MMG2D_saveAllSols(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_saveDisp	mmg2d9.c	/^int MMG2D_saveDisp(MMG5_pMesh mesh,MMG5_pSol disp) {$/;"	f
MMG2D_saveEle	inout_2d.c	/^int MMG2D_saveEle(MMG5_pMesh mesh,const char *filename) {$/;"	f	file:
MMG2D_saveMesh	inout_2d.c	/^int MMG2D_saveMesh(MMG5_pMesh mesh,const char *filename) {$/;"	f
MMG2D_saveMshMesh	inout_2d.c	/^int MMG2D_saveMshMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_saveMshMesh_and_allData	inout_2d.c	/^int MMG2D_saveMshMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_saveNeigh	inout_2d.c	/^int MMG2D_saveNeigh(MMG5_pMesh mesh,const char *filename) {$/;"	f	file:
MMG2D_saveSol	inout_2d.c	/^int MMG2D_saveSol(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_saveTetgenMesh	inout_2d.c	/^int MMG2D_saveTetgenMesh(MMG5_pMesh mesh,const char *filename) {$/;"	f
MMG2D_saveVtkMesh	inoutcpp_2d.cpp	/^int MMG2D_saveVtkMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_saveVtkMesh_and_allData	inoutcpp_2d.cpp	/^int MMG2D_saveVtkMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_saveVtpMesh	inoutcpp_2d.cpp	/^int MMG2D_saveVtpMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_saveVtpMesh_and_allData	inoutcpp_2d.cpp	/^int MMG2D_saveVtpMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_saveVtuMesh	inoutcpp_2d.cpp	/^int MMG2D_saveVtuMesh(MMG5_pMesh mesh,MMG5_pSol sol,const char *filename) {$/;"	f
MMG2D_saveVtuMesh_and_allData	inoutcpp_2d.cpp	/^int MMG2D_saveVtuMesh_and_allData(MMG5_pMesh mesh,MMG5_pSol *sol,const char *filename) {$/;"	f
MMG2D_savedisp_db	inout_2d.c	/^int MMG2D_savedisp_db(MMG5_pMesh mesh,MMG5_pSol disp,char *filename,int8_t pack) {$/;"	f
MMG2D_savemesh_db	inout_2d.c	/^int MMG2D_savemesh_db(MMG5_pMesh mesh,char *filename,int8_t pack) {$/;"	f
MMG2D_savemet_db	inout_2d.c	/^int MMG2D_savemet_db(MMG5_pMesh mesh,MMG5_pSol met,char *filename,int8_t pack) {$/;"	f
MMG2D_savenor_db	inout_2d.c	/^int MMG2D_savenor_db(MMG5_pMesh mesh,char *filename,int8_t pack) {$/;"	f
MMG2D_scaleMesh	scalem_2d.c	/^int MMG2D_scaleMesh(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pSol sol) {$/;"	f
MMG2D_setMeshSize_alloc	zaldy_2d.c	/^int MMG2D_setMeshSize_alloc( MMG5_pMesh mesh ) {$/;"	f
MMG2D_set_metricAtPointsOnReqEdges	isosiz_2d.c	/^int MMG2D_set_metricAtPointsOnReqEdges ( MMG5_pMesh mesh,MMG5_pSol met, int8_t ismet ) {$/;"	f
MMG2D_setadj	analys_2d.c	/^int MMG2D_setadj(MMG5_pMesh mesh) {$/;"	f
MMG2D_setfunc	libmmg2d_tools.c	/^void MMG2D_setfunc(MMG5_pMesh mesh,MMG5_pSol met) {$/;"	f
MMG2D_setref_ls	mmg2d6.c	/^int MMG2D_setref_ls(MMG5_pMesh mesh, MMG5_pSol sol){$/;"	f
MMG2D_settagtriangles	mmg2d2.c	/^int MMG2D_settagtriangles(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
MMG2D_singul	analys_2d.c	/^int MMG2D_singul(MMG5_pMesh mesh, int ref ) {$/;"	f
MMG2D_snapval	mmg2d6.c	/^int MMG2D_snapval(MMG5_pMesh mesh, MMG5_pSol sol) {$/;"	f
MMG2D_solTruncatureForOptim	libmmg2d.c	/^void MMG2D_solTruncatureForOptim(MMG5_pMesh mesh, MMG5_pSol met) {$/;"	f
MMG2D_split1	split_2d.c	/^int MMG2D_split1(MMG5_pMesh mesh, MMG5_pSol sol, int k, int vx[3]) {$/;"	f
MMG2D_split1_sim	split_2d.c	/^int MMG2D_split1_sim(MMG5_pMesh mesh, MMG5_pSol sol, int k, int vx[3]) {$/;"	f
MMG2D_split1b	split_2d.c	/^int MMG2D_split1b(MMG5_pMesh mesh,int k,int8_t i,int ip) {$/;"	f
MMG2D_split2	split_2d.c	/^int MMG2D_split2(MMG5_pMesh mesh, MMG5_pSol sol, int k, int vx[3]) {$/;"	f
MMG2D_split2_sim	split_2d.c	/^int MMG2D_split2_sim(MMG5_pMesh mesh, MMG5_pSol sol, int k, int vx[3]) {$/;"	f
MMG2D_split3	split_2d.c	/^int MMG2D_split3(MMG5_pMesh mesh, MMG5_pSol sol, int k, int vx[3]) {$/;"	f
MMG2D_split3_sim	split_2d.c	/^int MMG2D_split3_sim(MMG5_pMesh mesh, MMG5_pSol sol, int k, int vx[3]) {$/;"	f
MMG2D_splitbar	split_2d.c	/^int MMG2D_splitbar(MMG5_pMesh mesh,int k,int ip) {$/;"	f
MMG2D_spllag	mmg2d9.c	/^int MMG2D_spllag(MMG5_pMesh mesh,MMG5_pSol disp,MMG5_pSol met,int itdeg,int *warn) {$/;"	f
MMG2D_starpu_adpcol	mmg2d1.c	/^void MMG2D_starpu_adpcol(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_starpu_adpspl	mmg2d1.c	/^ void MMG2D_starpu_adpspl(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_starpu_anaelt	mmg2d1.c	/^void MMG2D_starpu_anaelt(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_starpu_colelt	mmg2d1.c	/^void MMG2D_starpu_colelt(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_starpu_hashTria	hash_2d.c	/^void MMG2D_starpu_hashTria(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_starpu_movtri	mmg2d1.c	/^void MMG2D_starpu_movtri(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_starpu_swpmsh	mmg2d1.c	/^void MMG2D_starpu_swpmsh(void *buffers[], void *cl_arg) {$/;"	f
MMG2D_sum_reqEdgeLengthsAtPoint	isosiz_2d.c	/^int MMG2D_sum_reqEdgeLengthsAtPoint(MMG5_pMesh mesh,MMG5_pSol met,MMG5_pTria pt,int8_t i) {$/;"	f
MMG2D_swapar	swapar_2d.c	/^int MMG2D_swapar(MMG5_pMesh mesh,int k,int8_t i) {$/;"	f
MMG2D_swapdelone	swapar_2d.c	/^int MMG2D_swapdelone(MMG5_pMesh mesh,MMG5_pSol sol,int k,int8_t i,double crit,int *list) {$/;"	f
MMG2D_swpmsh	mmg2d1.c	/^int MMG2D_swpmsh(MMG5_pMesh mesh,MMG5_pSol met,int typchk, int color1) {$/;"	f
MMG2D_swpmshlag	mmg2d9.c	/^int MMG2D_swpmshlag(MMG5_pMesh mesh,MMG5_pSol met,double crit,int itdeg) {$/;"	f
MMG2D_unpackLS	velextls_2d.c	/^int MMG2D_unpackLS(MMG5_pMesh mesh,MMG5_pSol disp,LSst *lsst,int npf,int *invperm) {$/;"	f
MMG2D_unused_function	velextls_2d.c	/^void MMG2D_unused_function(void) {$/;"	f
MMG2D_unused_function	velextls_2d.c	/^void __attribute__((unused)) MMG2D_unused_function(void) {$/;"	f
MMG2D_updatemet_ani	anisosiz_2d.c	/^int MMG2D_updatemet_ani(double *m,double *n,double dm[2],double dn[2],$/;"	f	file:
MMG2D_usage	mmg2d.c	/^static int MMG2D_usage(char *name) {$/;"	f	file:
MMG2D_velextLS	velextls_2d.c	/^int MMG2D_velextLS(MMG5_pMesh mesh,MMG5_pSol disp) {$/;"	f
MMG2D_vfrac	mmg2d6.c	/^double MMG2D_vfrac(MMG5_pMesh mesh,MMG5_pSol sol,int k,int pm) {$/;"	f
MMG2D_voltri	mmg2d6.c	/^inline double MMG2D_voltri(MMG5_pMesh mesh,int ip0,int ip1,int ip2) {$/;"	f
MMG2D_writeDoubleSol	inout_2d.c	/^void MMG2D_writeDoubleSol(MMG5_pSol sol,FILE *inm,int bin,int pos) {$/;"	f	file:
MMG2D_writeLocalParam	mmg2d.c	/^int MMG2D_writeLocalParam( MMG5_pMesh mesh ) {$/;"	f	file:
MMG2D_writeLocalParamAtEdg	mmg2d.c	/^int MMG2D_writeLocalParamAtEdg( MMG5_pMesh mesh, MMG5_iNode *bdryRefs,$/;"	f	file:
MMG2D_zaldy	zaldy_2d.c	/^int MMG2D_zaldy(MMG5_pMesh mesh) {$/;"	f
MMG5_ctim	mmg2d.c	/^mytime   MMG5_ctim[TIMEMAX];$/;"	v
MMG5_defaultValues	mmg2d.c	/^static inline int MMG5_defaultValues(MMG5_pMesh mesh) {$/;"	f	file:
MMG5_delEdge	zaldy_2d.c	/^void MMG5_delEdge(MMG5_pMesh mesh,int iel) {$/;"	f
MMG5_endcod	mmg2d.c	/^static void MMG5_endcod(void) {$/;"	f	file:
MMG5_getnElt	zaldy_2d.c	/^int MMG5_getnElt(MMG5_pMesh mesh,int n) {$/;"	f
MMG5_interpmet22	intmet_2d.c	/^int MMG5_interpmet22(MMG5_pMesh mesh,double *m,double *n,double s,double *mr) {$/;"	f
MMG5_mmg2dChkmsh	chkmsh_2d.c	/^int MMG5_mmg2dChkmsh(MMG5_pMesh mesh, int severe,int base) {$/;"	f
MMG_graph_meshElts2metis	metis_mmg.c	/^int MMG_graph_meshElts2metis( MMG5_pMesh mesh,MMG5_pSol met,$/;"	f
MMG_part_meshElts2metis	metis_mmg.c	/^int MMG_part_meshElts2metis( MMG5_pMesh mesh, idx_t* part, idx_t nproc )$/;"	f
M_LAMBDA	mmg2d.h	48;"	d
M_MAX	mmg2d.h	45;"	d
M_MIN	mmg2d.h	46;"	d
M_MU	mmg2d.h	49;"	d
NBR	mmg2d.c	45;"	d	file:
NUM_THREADS	mmg2d.c	44;"	d	file:
NX	mmg2d.c	896;"	d	file:
Queue	mmg2d.h	/^} Queue;$/;"	t	typeref:struct:squeue
START	mmg2d.c	37;"	d	file:
STARTlin	mmg2d.c	36;"	d	file:
_LS_LAMBDA	velextls_2d.c	38;"	d	file:
_LS_MU	velextls_2d.c	39;"	d	file:
adpcol_codelet	mmg2d1.c	/^struct starpu_codelet adpcol_codelet =$/;"	v	typeref:struct:starpu_codelet
adpspl_codelet	mmg2d1.c	/^struct starpu_codelet adpspl_codelet =$/;"	v	typeref:struct:starpu_codelet
afficher	mmg2d.c	/^void afficher(cellule * liste)$/;"	f
ajout_debut	mmg2d.c	/^cellule * ajout_debut(cellule * liste, int e)$/;"	f
ajout_jieme	mmg2d.c	/^cellule* ajout_jieme(cellule* liste, int j, int e)$/;"	f
anaelt_codelet	mmg2d1.c	/^struct starpu_codelet anaelt_codelet =$/;"	v	typeref:struct:starpu_codelet
areCorners	libmmg2df.h	/^!    INTEGER, DIMENSION(*)                  :: refs,areCorners,areRequired$/;"	v
cellule	mmg2d.c	/^typedef struct Cell cellule;$/;"	t	typeref:struct:Cell	file:
colelt_codelet	mmg2d1.c	/^struct starpu_codelet colelt_codelet =$/;"	v	typeref:struct:starpu_codelet
count_mutex	mmg2d1.c	/^  pthread_mutex_t count_mutex;$/;"	v
count_mutex1	mmg2d1.c	/^  pthread_mutex_t count_mutex1;$/;"	v
cree_liste_vide	mmg2d.c	/^cellule * cree_liste_vide()$/;"	f
cur	mmg2d.h	/^  int    *stack,cur;$/;"	m	struct:squeue
hashTria_codelet	mmg2d1.c	/^struct starpu_codelet hashTria_codelet =$/;"	v	typeref:struct:starpu_codelet
head	mmg2d.h	/^  int    *head;$/;"	m	struct:__anon1
inxt	boulep_2d.c	/^static uint8_t inxt[3]  = {1,2,0};$/;"	v	file:
iprev	boulep_2d.c	/^static uint8_t iprev[3] = {2,0,1};$/;"	v	file:
jieme	mmg2d.c	/^int jieme(cellule * liste, int j)$/;"	f
link	mmg2d.h	/^  int    *link;$/;"	m	struct:__anon1
lissmet_ani	lissmet_2d.c	/^int lissmet_ani(MMG5_pMesh mesh,MMG5_pSol sol) {$/;"	f
long_ani	length_2d.c	/^double long_ani(double *ca,double *cb,double *ma,double *mb) {$/;"	f
long_iso	length_2d.c	/^double long_iso(double *ca,double *cb,double *ma,double *mb) {$/;"	f
main	mmg2d.c	/^int main(int argc,char *argv[]) {$/;"	f
max	mmg2d.c	/^int max;$/;"	v
movtri_codelet	mmg2d1.c	/^struct starpu_codelet movtri_codelet =$/;"	v	typeref:struct:starpu_codelet
mutex	mmg2d.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mutex	mmg2d.c	/^pthread_mutex_t mutex;$/;"	v
mutex	mmg2d1.c	/^  static starpu_pthread_mutex_t mutex;$/;"	v	file:
nbre	mmg2d1.c	/^  int nbre=0;$/;"	v
ntasks	mmg2d.c	/^int ntasks;$/;"	v
pBucket	mmg2d.h	/^typedef Bucket * pBucket;$/;"	t
pQueue	mmg2d.h	/^typedef Queue * pQueue;$/;"	t
parsar	mmg2d.c	/^int parsar(int argc,char *argv[],MMG5_pMesh mesh,MMG5_pSol met,MMG5_pSol sol) {$/;"	f
refs	libmmg2df.h	/^!    INTEGER, DIMENSION(*)                  :: refs,areCorners,areRequired$/;"	m	class:DIMENSION
refs	libmmg2df.h	/^!    INTEGER, DIMENSION(*)         :: refs,areRequired$/;"	m	class:DIMENSION
rett	mmg2d1.c	/^  int rett;$/;"	v
size	mmg2d.c	/^int size=10;$/;"	v
size	mmg2d.h	/^  int     size;$/;"	m	struct:__anon1
squeue	mmg2d.h	/^typedef struct squeue {$/;"	s
stack	mmg2d.h	/^  int    *stack,cur;$/;"	m	struct:squeue
suivant	mmg2d.c	/^   struct Cell * suivant;  \/\/ pointeur vers la cellule suivante$/;"	m	struct:Cell	typeref:struct:Cell::Cell	file:
supprime_debut	mmg2d.c	/^cellule * supprime_debut(cellule * liste)$/;"	f
supprime_jieme	mmg2d.c	/^cellule * supprime_jieme(cellule * liste, int j)$/;"	f
swpmsh_codelet	mmg2d1.c	/^struct starpu_codelet swpmsh_codelet =$/;"	v	typeref:struct:starpu_codelet
taille	mmg2d.c	/^int taille(cellule * liste)$/;"	f
val	mmg2d.c	/^   int val;$/;"	m	struct:Cell	file:
